// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameDevice = "devices"

// Device mapped from table <devices>
type Device struct {
	ID              string     `gorm:"column:id;primaryKey" json:"id"`                                            // ID
	Name            *string    `gorm:"column:name" json:"name"`                                          // Device name
	Voucher         string     `gorm:"column:voucher;not null" json:"voucher"`                           // Credential
	TenantID        string     `gorm:"column:tenant_id;not null" json:"tenant_id"` // Tenant ID (foreign key, restrict on delete)
	IsEnabled       string     `gorm:"column:is_enabled;not null" json:"is_enabled"` // Enable/disable status
	ActivateFlag    string     `gorm:"column:activate_flag;not null" json:"activate_flag"` // Activation status
	CreatedAt       *time.Time `gorm:"column:created_at" json:"created_at"`                             // Creation time
	UpdateAt        *time.Time `gorm:"column:update_at" json:"update_at"`                                // Update time
	DeviceNumber    string     `gorm:"column:device_number;not null" json:"device_number"` // Device number
	ProductID       *string    `gorm:"column:product_id" json:"product_id"` // Product ID (foreign key)
	ParentID        *string    `gorm:"column:parent_id" json:"parent_id"`                  // Gateway ID (for sub-device)
	Protocol        *string    `gorm:"column:protocol" json:"protocol"`                       // Communication protocol
	Label           *string    `gorm:"column:label" json:"label"`                             // Tags (comma-separated)
	Location        *string    `gorm:"column:location" json:"location"`                                  // Geolocation
	SubDeviceAddr   *string    `gorm:"column:sub_device_addr" json:"sub_device_addr"`            // Sub-device address
	CurrentVersion  *string    `gorm:"column:current_version" json:"current_version"`      // Current firmware version
	AdditionalInfo  *string    `gorm:"column:additional_info;default:{}" json:"additional_info"` // Additional info (e.g., thresholds, images)
	ProtocolConfig  *string    `gorm:"column:protocol_config;default:{}" json:"protocol_config"` // Protocol form configuration
	Remark1         *string    `gorm:"column:remark1" json:"remark1"`
	Remark2         *string    `gorm:"column:remark2" json:"remark2"`
	Remark3         *string    `gorm:"column:remark3" json:"remark3"`
	DeviceConfigID  *string    `gorm:"column:device_config_id" json:"device_config_id"` // Device config ID (foreign key)
	BatchNumber     *string    `gorm:"column:batch_number" json:"batch_number"`                        // Batch number
	ActivateAt      *time.Time `gorm:"column:activate_at" json:"activate_at"`                       // Activation time
	IsOnline        int16      `gorm:"column:is_online;not null" json:"is_online"` // Online status: 1=online, 0=offline
	AccessWay       *string    `gorm:"column:access_way" json:"access_way"`    // Access method: A=protocol, B=service
	Description     *string    `gorm:"column:description" json:"description"`                            // Description
	ServiceAccessID *string    `gorm:"column:service_access_id" json:"service_access_id"`                                   // Service access ID
}

// TableName Device's table name
func (*Device) TableName() string {
	return TableNameDevice
}
