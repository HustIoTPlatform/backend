// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/attribute/datas/set/logs": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/attribute/datas/{id}": {
            "get": {
                "responses": {}
            },
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/board": {
            "get": {
                "summary": "Get board list",
                "description": "Get a paginated list of boards",
                "tags": ["board"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.BoardListRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create board",
                "description": "Create a new board",
                "tags": ["board"],
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "board",
                        "in": "body",
                        "description": "Board information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateBoardReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.CreateBoardRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update board",
                "description": "Update an existing board",
                "tags": ["board"],
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "board",
                        "in": "body",
                        "description": "Board information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateBoardReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.UpdateBoardRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "404": {
                        "description": "Board not found",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/board/device": {
            "get": {
                "summary": "Get board devices",
                "description": "Get devices associated with a board",
                "tags": ["board"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "board_id",
                        "in": "query",
                        "description": "Board ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.BoardDeviceListRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/board/device/total": {
            "get": {
                "summary": "Get board device total",
                "description": "Get total number of devices associated with a board",
                "tags": ["board"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "board_id",
                        "in": "query",
                        "description": "Board ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.BoardDeviceTotalRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/board/home": {
            "get": {
                "summary": "Get home board",
                "description": "Get the home board configuration",
                "tags": ["board"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.HomeBoardRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/board/tenant": {
            "get": {
                "summary": "Get tenant boards",
                "description": "Get boards associated with a tenant",
                "tags": ["board"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.TenantBoardListRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/board/tenant/device/info": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/board/tenant/user/info": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/board/trend": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/board/user/info": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/board/user/update": {
            "post": {
                "responses": {}
            }
        },
        "/api/v1/board/user/update/password": {
            "post": {
                "responses": {}
            }
        },
        "/api/v1/board/{id}": {
            "get": {
                "summary": "Get board by ID",
                "description": "Get detailed information about a specific board",
                "tags": ["board"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Board ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.BoardDetailRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "404": {
                        "description": "Board not found",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete board",
                "description": "Delete a board by ID",
                "tags": ["board"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Board ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "404": {
                        "description": "Board not found",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/casbin/function": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/casbin/function/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/casbin/user": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/casbin/user/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/command/datas/set/logs": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/data_script": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/data_script/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/datapolicy": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            }
        },
        "/api/v1/device": {
            "post": {
                "summary": "Create device",
                "description": "Create a new device",
                "tags": ["device"],
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device",
                        "in": "body",
                        "description": "Device information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateDeviceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.CreateDeviceRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get device list",
                "description": "Get paginated list of devices",
                "tags": ["device"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.DeviceListRes"
                        }
                    }
                }
            }
        },
        "/api/v1/device/active": {
            "put": {
                "summary": "Activate device",
                "description": "Activate a device with the provided information",
                "tags": ["device"],
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "device",
                        "in": "body",
                        "description": "Device activation information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ActiveDeviceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.Device"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/device/check/{deviceNumber}": {
            "get": {
                "summary": "Check device number availability",
                "description": "Check if a device number is available",
                "tags": ["device"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "deviceNumber",
                        "in": "path",
                        "description": "Device number to check",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "is_available": {
                                    "type": "boolean",
                                    "description": "Whether the device number is available"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/device/detail/{id}": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/device/group": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/device/group/detail/{id}": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/device/group/relation": {
            "get": {
                "responses": {}
            },
            "post": {
                "responses": {}
            },
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/device/group/relation/list": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/device/group/tree": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/device/group/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/device/online/status/ws": {
            "get": {
                "summary": "Get device online status",
                "description": "Get real-time device online status via WebSocket",
                "tags": ["device"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.DeviceOnlineStatus"
                        }
                    }
                }
            }
        },
        "/api/v1/device/template": {
            "get": {
                "summary": "Get device template list",
                "description": "Get a paginated list of device templates",
                "tags": ["device"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.GetDeviceTemplateListRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create device template",
                "description": "Create a new device template",
                "tags": ["device"],
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "template",
                        "in": "body",
                        "description": "Device template information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateDeviceTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.CreateDeviceTemplateRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update device template",
                "description": "Update an existing device template",
                "tags": ["device"],
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "template",
                        "in": "body",
                        "description": "Device template information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateDeviceTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.UpdateDeviceTemplateRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/device/template/chart": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/device/template/detail/{id}": {
            "get": {
                "summary": "Get device template by ID",
                "description": "Get detailed information about a specific device template",
                "tags": ["device"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.DeviceTemplateReadSchema"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/device/template/menu": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/device/template/{id}": {
            "delete": {
                "summary": "Delete device template",
                "description": "Delete a device template by ID",
                "tags": ["device"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/device/{id}": {
            "get": {
                "summary": "Get device by ID",
                "description": "Get detailed information about a specific device",
                "tags": ["device"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Device ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.Device"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete device",
                "description": "Delete a device by ID",
                "tags": ["device"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "x-token",
                        "in": "header",
                        "description": "Authentication token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Device ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "404": {
                        "description": "Device not found",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/device_config": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/device_config/batch": {
            "put": {
                "responses": {}
            }
        },
        "/api/v1/device_config/menu": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/device_config/{id}": {
            "get": {
                "responses": {}
            },
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/dict": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/dict/column": {
            "post": {
                "responses": {}
            }
        },
        "/api/v1/dict/column/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/dict/enum": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/dict/language": {
            "post": {
                "responses": {}
            }
        },
        "/api/v1/dict/language/{id}": {
            "get": {
                "responses": {}
            },
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/event/datas": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/file/up": {
            "post": {
                "tags": [
                    "File Upload"
                ],
                "responses": {}
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Log in using email or phone number and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Authentication"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.LoginRsp"
                        }
                    },
                    "400": {
                        "description": "Error Response",
                        "schema": {
                            "$ref": "#/definitions/errcode.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/logo": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            }
        },
        "/api/v1/notification/services/config": {
            "post": {
                "responses": {}
            }
        },
        "/api/v1/notification/services/config/e-mail/test": {
            "post": {
                "responses": {}
            }
        },
        "/api/v1/notification/services/config/{type}": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/notification_group": {
            "post": {
                "responses": {}
            }
        },
        "/api/v1/notification_group/list": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/notification_group/{id}": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/notification_history/list": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/open/keys": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/open/keys/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/operation_logs": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/ota/package": {
            "get": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/ota/package/": {
            "put": {
                "responses": {}
            }
        },
        "/api/v1/ota/package/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/ota/task": {
            "get": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/ota/task/detail": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            }
        },
        "/api/v1/ota/task/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/protocol_plugin": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/protocol_plugin/config_form": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/protocol_plugin/device_config_form": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/protocol_plugin/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/role": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/role/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas/current/detail/{id}": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas/current/keys": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas/current/keys/ws": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas/current/ws": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas/current/{id}": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas/history": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas/history/page": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas/history/pagination": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas/set/logs": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/telemetry/datas/statistic": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/ui_elements": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/ui_elements/menu": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/ui_elements/{id}": {
            "delete": {
                "responses": {}
            }
        },
        "/api/v1/user": {
            "get": {
                "responses": {}
            },
            "put": {
                "responses": {}
            },
            "post": {
                "responses": {}
            }
        },
        "/api/v1/user/detail": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/user/tenant/id": {
            "get": {
                "responses": {}
            }
        },
        "/api/v1/user/update": {
            "put": {
                "responses": {}
            }
        },
        "/api/v1/user/{id}": {
            "get": {
                "responses": {}
            },
            "delete": {
                "responses": {}
            }
        }
    },
    "definitions": {
        "errcode.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "description": "Used to store custom messages",
                    "type": "string"
                }
            }
        },
        "model.LoginReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "Login account (enter email or mobile number)",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 5,
                    "example": "test@thingsly.vn"
                },
                "password": {
                    "description": "Password",
                    "type": "string",
                    "maxLength": 512,
                    "minLength": 6,
                    "example": "123456"
                },
                "salt": {
                    "description": "Random salt (required if RSA encryption is enabled by the super administrator)",
                    "type": "string",
                    "maxLength": 512
                }
            }
        },
        "model.LoginRsp": {
            "type": "object",
            "properties": {
                "expires_in": {
                    "description": "Expiration time (in seconds)",
                    "type": "integer"
                },
                "token": {
                    "description": "Login token",
                    "type": "string"
                }
            }
        },
        "model.CreateDeviceReq": {
            "type": "object",
            "required": ["name", "access_way"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Device name"
                },
                "label": {
                    "type": "string",
                    "description": "Device label"
                },
                "device_config_id": {
                    "type": "string",
                    "description": "Device config ID"
                },
                "access_way": {
                    "type": "string",
                    "description": "Access way (A for direct access)"
                }
            }
        },
        "model.CreateDeviceRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Device ID"
                        },
                        "name": {
                            "type": "string",
                            "description": "Device name"
                        },
                        "voucher": {
                            "type": "string",
                            "description": "Device authentication voucher"
                        },
                        "tenant_id": {
                            "type": "string",
                            "description": "Tenant ID"
                        },
                        "is_enabled": {
                            "type": "string",
                            "description": "Device enabled status"
                        },
                        "activate_flag": {
                            "type": "string",
                            "description": "Device activation flag"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                        },
                        "update_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                        },
                        "device_number": {
                            "type": "string",
                            "description": "Device number"
                        },
                        "product_id": {
                            "type": "string",
                            "description": "Product ID"
                        },
                        "parent_id": {
                            "type": "string",
                            "description": "Parent device ID"
                        },
                        "protocol": {
                            "type": "string",
                            "description": "Device protocol"
                        },
                        "label": {
                            "type": "string",
                            "description": "Device label"
                        },
                        "location": {
                            "type": "string",
                            "description": "Device location"
                        },
                        "sub_device_addr": {
                            "type": "string",
                            "description": "Sub-device address"
                        },
                        "current_version": {
                            "type": "string",
                            "description": "Current version"
                        },
                        "additional_info": {
                            "type": "string",
                            "description": "Additional information"
                        },
                        "protocol_config": {
                            "type": "string",
                            "description": "Protocol configuration"
                        },
                        "remark1": {
                            "type": "string",
                            "description": "Remark 1"
                        },
                        "remark2": {
                            "type": "string",
                            "description": "Remark 2"
                        },
                        "remark3": {
                            "type": "string",
                            "description": "Remark 3"
                        },
                        "device_config_id": {
                            "type": "string",
                            "description": "Device config ID"
                        },
                        "batch_number": {
                            "type": "string",
                            "description": "Batch number"
                        },
                        "activate_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Activation timestamp"
                        },
                        "is_online": {
                            "type": "integer",
                            "description": "Online status"
                        },
                        "access_way": {
                            "type": "string",
                            "description": "Access way"
                        },
                        "description": {
                            "type": "string",
                            "description": "Device description"
                        },
                        "service_access_id": {
                            "type": "string",
                            "description": "Service access ID"
                        }
                    }
                }
            }
        },
        "model.Device": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Device ID"
                },
                "name": {
                    "type": "string",
                    "description": "Device name"
                },
                "device_number": {
                    "type": "string",
                    "description": "Device number"
                },
                "description": {
                    "type": "string",
                    "description": "Device description"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Device active status"
                }
            }
        },
        "model.DeviceListRes": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Total number of devices"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Device"
                    }
                }
            }
        },
        "model.ActiveDeviceReq": {
            "type": "object",
            "required": ["device_id", "activate_flag"],
            "properties": {
                "device_id": {
                    "type": "string",
                    "description": "Device ID"
                },
                "activate_flag": {
                    "type": "string",
                    "description": "Activation flag (active/inactive)"
                }
            }
        },
        "model.DeviceOnlineStatus": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string",
                    "description": "Device ID"
                },
                "is_online": {
                    "type": "boolean",
                    "description": "Device online status"
                },
                "last_seen": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last seen timestamp"
                }
            }
        },
        "model.SuccessResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "object",
                    "description": "Response data"
                }
            }
        },
        "model.CreateDeviceTemplateReq": {
            "type": "object",
            "required": ["name", "description"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Template name"
                },
                "description": {
                    "type": "string",
                    "description": "Template description"
                },
                "protocol": {
                    "type": "string",
                    "description": "Device protocol"
                },
                "protocol_config": {
                    "type": "string",
                    "description": "Protocol configuration"
                }
            }
        },
        "model.CreateDeviceTemplateRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Template ID"
                        },
                        "name": {
                            "type": "string",
                            "description": "Template name"
                        },
                        "description": {
                            "type": "string",
                            "description": "Template description"
                        },
                        "protocol": {
                            "type": "string",
                            "description": "Device protocol"
                        },
                        "protocol_config": {
                            "type": "string",
                            "description": "Protocol configuration"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                        },
                        "update_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                        }
                    }
                }
            }
        },
        "model.UpdateDeviceTemplateReq": {
            "type": "object",
            "required": ["id", "name", "description"],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Template ID"
                },
                "name": {
                    "type": "string",
                    "description": "Template name"
                },
                "description": {
                    "type": "string",
                    "description": "Template description"
                },
                "protocol": {
                    "type": "string",
                    "description": "Device protocol"
                },
                "protocol_config": {
                    "type": "string",
                    "description": "Protocol configuration"
                }
            }
        },
        "model.UpdateDeviceTemplateRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Template ID"
                        },
                        "name": {
                            "type": "string",
                            "description": "Template name"
                        },
                        "description": {
                            "type": "string",
                            "description": "Template description"
                        },
                        "protocol": {
                            "type": "string",
                            "description": "Device protocol"
                        },
                        "protocol_config": {
                            "type": "string",
                            "description": "Protocol configuration"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                        },
                        "update_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                        }
                    }
                }
            }
        },
        "model.GetDeviceTemplateListRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "total": {
                            "type": "integer",
                            "description": "Total number of templates"
                        },
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DeviceTemplateReadSchema"
                            }
                        }
                    }
                }
            }
        },
        "model.DeviceTemplateReadSchema": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Template ID"
                },
                "name": {
                    "type": "string",
                    "description": "Template name"
                },
                "description": {
                    "type": "string",
                    "description": "Template description"
                },
                "protocol": {
                    "type": "string",
                    "description": "Device protocol"
                },
                "protocol_config": {
                    "type": "string",
                    "description": "Protocol configuration"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp"
                },
                "update_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last update timestamp"
                }
            }
        },
        "model.CreateBoardReq": {
            "type": "object",
            "required": ["name", "description"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Board name"
                },
                "description": {
                    "type": "string",
                    "description": "Board description"
                },
                "layout": {
                    "type": "string",
                    "description": "Board layout configuration"
                },
                "is_home": {
                    "type": "boolean",
                    "description": "Whether this is the home board"
                }
            }
        },
        "model.CreateBoardRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Board ID"
                        },
                        "name": {
                            "type": "string",
                            "description": "Board name"
                        },
                        "description": {
                            "type": "string",
                            "description": "Board description"
                        },
                        "layout": {
                            "type": "string",
                            "description": "Board layout configuration"
                        },
                        "is_home": {
                            "type": "boolean",
                            "description": "Whether this is the home board"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                        },
                        "update_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                        }
                    }
                }
            }
        },
        "model.UpdateBoardReq": {
            "type": "object",
            "required": ["id", "name", "description"],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Board ID"
                },
                "name": {
                    "type": "string",
                    "description": "Board name"
                },
                "description": {
                    "type": "string",
                    "description": "Board description"
                },
                "layout": {
                    "type": "string",
                    "description": "Board layout configuration"
                },
                "is_home": {
                    "type": "boolean",
                    "description": "Whether this is the home board"
                }
            }
        },
        "model.UpdateBoardRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Board ID"
                        },
                        "name": {
                            "type": "string",
                            "description": "Board name"
                        },
                        "description": {
                            "type": "string",
                            "description": "Board description"
                        },
                        "layout": {
                            "type": "string",
                            "description": "Board layout configuration"
                        },
                        "is_home": {
                            "type": "boolean",
                            "description": "Whether this is the home board"
                        },
                        "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                        },
                        "update_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                        }
                    }
                }
            }
        },
        "model.BoardListRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "total": {
                            "type": "integer",
                            "description": "Total number of boards"
                        },
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.BoardDetailRes"
                            }
                        }
                    }
                }
            }
        },
        "model.BoardDetailRes": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Board ID"
                },
                "name": {
                    "type": "string",
                    "description": "Board name"
                },
                "description": {
                    "type": "string",
                    "description": "Board description"
                },
                "layout": {
                    "type": "string",
                    "description": "Board layout configuration"
                },
                "is_home": {
                    "type": "boolean",
                    "description": "Whether this is the home board"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp"
                },
                "update_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last update timestamp"
                }
            }
        },
        "model.BoardDeviceListRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Device"
                    }
                }
            }
        },
        "model.BoardDeviceTotalRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "total": {
                            "type": "integer",
                            "description": "Total number of devices"
                        }
                    }
                }
            }
        },
        "model.HomeBoardRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "$ref": "#/definitions/model.BoardDetailRes"
                }
            }
        },
        "model.TenantBoardListRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Response code"
                },
                "message": {
                    "type": "string",
                    "description": "Response message"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BoardDetailRes"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "x-token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1.0.0",
	Host:             "localhost:9999",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Thingsly IoT Platform API",
	Description:      `This is the API documentation for Thingsly IoT Platform.
	
## Overview
Thingsly IoT Platform is a comprehensive IoT solution that provides device management, data visualization, and automation capabilities.

## Authentication
All API requests require authentication using a JWT token. The token should be included in the request header as 'x-token'.

## API Structure
- Device Management: Create, update, delete and manage IoT devices
- Board Management: Create and manage visualization boards
- Data Management: Handle telemetry data and device metrics
- User Management: Manage users and permissions
- Template Management: Create and manage device templates

## Error Handling
All API responses follow a standard format:
- 200: Success
- 400: Bad Request - Invalid parameters
- 401: Unauthorized - Invalid or missing token
- 403: Forbidden - Insufficient permissions
- 404: Not Found - Resource not found
- 500: Internal Server Error

## Rate Limiting
API requests are limited to 100 requests per minute per IP address.

## Support
For support, please contact:
- Email: support@thingsly.vn
- Website: https://thingsly.vn
- Documentation: https://docs.thingsly.vn

## Source Code
The source code for this API is available on GitHub:
- Repository: https://github.com/Thingsly/backend
- Issues: https://github.com/Thingsly/backend/issues
- Pull Requests: https://github.com/Thingsly/backend/pulls
`,
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}